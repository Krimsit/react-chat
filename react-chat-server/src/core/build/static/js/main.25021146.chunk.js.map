{"version":3,"sources":["redux/reducers/index.js","redux/reducers/attachments.js","redux/reducers/dialogs.js","redux/reducers/messages.js","redux/reducers/user.js","redux/reducers sync /^/.*$","core/axios.js","utils/api/dialogs.js","utils/api/messages.js","utils/api/user.js","utils/api/files.js","core/socket.js","redux/actions/dialogs.js","redux/actions/messages.js","utils/helpers/validateField.js","utils/helpers/convertCurrentTime.js","utils/helpers/openNotification.js","utils/helpers/useOutside.js","utils/helpers/isAudio.js","redux/actions/user.js","redux/actions/attachments.js","redux/store.js","utils/validate.js","components/Button/index.js","components/Block/index.js","components/Message/index.js","components/DialogItem/index.jsx","components/Dialogs/index.js","components/Time/index.js","components/ReadedIcon/index.js","components/Avatar/index.js","utils/helpers/generateAvatar.js","components/Status/index.js","components/ChatInput/index.js","components/Messages/index.js","components/FormField/index.jsx","containers/Dialogs.js","containers/Messages.js","containers/ChatInput.js","containers/Status.js","containers/Sidebar.js","components/Sidebar/index.jsx","components/UploadFiles/index.jsx","modules/LoginForm/components/LoginForm.jsx","modules/LoginForm/index.js","modules/LoginForm/conteiners/LoginForm.js","modules/RegisterForm/components/RegisterForm.jsx","modules/RegisterForm/index.js","modules/RegisterForm/conteiners/RegisterForm.js","pages/Auth/components/CheckEmailInfo.jsx","pages/Auth/index.jsx","pages/Home/index.jsx","App.js","index.js"],"names":["combineReducers","reduce","initial","name","require","default","initialState","items","attachments","state","type","payload","filter","item","uid","currentDialogId","window","location","pathname","split","isLoading","dialogs","messages","message","_id","data","token","localStorage","isAuth","user","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","axios","defaults","baseURL","origin","headers","common","route","getAll","get","create","partner","text","post","getAllByDialogId","removeById","delete","send","dialogId","dialog_id","signin","postData","signup","verifyHash","hash","getMe","findUsers","query","upload","file","formData","FormData","append","socket","io","replace","actions","setDialogs","setCurrentDialogId","dispatch","emit","fetchDialogs","dialogsApi","then","setMessages","addMessage","getState","dialog","fetchSendMessage","messagesApi","setIsLoading","bool","removeMessageById","confirm","catch","fetchMessages","validateField","key","touched","errors","validateForm","number","mins","Math","floor","secs","toFixed","openNotification","title","duration","notification","description","isAudio","length","ext","setUserData","setIsAuth","fetchUserData","userApi","response","status","fetchUserLogin","fetchUserRegister","setAttachments","removeAttachments","composeEnchancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","midleware","thunk","store","createStore","rootReducer","applyMiddleware","values","rules","email","value","test","password","password_2","fullname","forEach","Button","props","className","classNames","size","Block","children","MessageAudio","audio","useState","isPlaying","setIsPlaying","progress","setProgress","currentTime","setCurrentTime","audioElem","useRef","useEffect","current","addEventListener","src","preload","ref","style","width","onClick","pause","play","icon","faPause","color","alt","faPlay","convertCurrentTime","Message","date","isMe","readed","isTyping","onRemoveMessage","isReaded","content","trigger","shape","EllipsisOutlined","ReactStringReplace","match","i","emoji","set","url","filename","renderAttachment","Date","defaultProps","renderLastMessage","userId","DialogItem","created_at","unreaded","lastMessage","author","to","isOnline","createdAt","isToday","format","Dialogs","onSearch","inputValue","Search","placeholder","onChange","target","orderBy","image","Empty","PRESENTED_IMAGE_SIMPLE","Time","formatDistanceToNow","addSuffix","locale","ruLocale","ReadedIcon","faCheckDouble","faCheck","Avatar","avatar","substr","char","charCodeAt","r","g","b","tinycolor","lighten","saturate","toHexString","colorLighten","generateAvatar","firstChar","toUpperCase","background","Status","online","TextArea","Input","ChatInput","emojiPickerVisible","setValue","toggleEmojiPicker","addEmoji","handleSendMessage","sendMessage","onSelectFiles","onRecord","isRecording","onHideRecord","onSelect","emojiTag","SmileOutlined","onKeyUp","autoSize","minRows","maxRows","StopOutlined","onFiles","containerProps","uploadProps","accept","multiple","CameraOutlined","LoadingOutlined","CloseSquareOutlined","SendOutlined","AudioOutlined","Messages","blockRef","blockHeight","height","tip","bind","FormField","prefix","handleBlur","handleChange","Item","validateStatus","help","hasFeedback","onBlur","connect","dialogsActions","Array","from","filtred","setFiltredItems","console","log","onChangeInput","toLowerCase","indexOf","on","removeListener","messagesActions","setBlockHeight","messagesRef","onNewMessage","scrollTo","attachmentsActions","navigator","getUserMedia","mozGetUserMedia","webkitGetUserMedia","msGetUserMedia","setIsRecording","mediaRecorder","setMediaRecorder","setEmojiPicker","setLoading","onRecording","stream","recorder","MediaRecorder","start","onstart","onstop","ondataavailable","File","uploadApi","sendAudio","onError","err","handleOutsideClick","el","contains","audioId","stop","files","a","uploaded","round","random","document","querySelector","removeEventListener","colons","trim","keyCode","currentDialogObj","visible","setVisible","setInputValue","messageText","setMessageText","users","setUsers","isSearching","setIsSearching","selectedUserId","setSelectedUserId","onClose","onShow","onSelectUser","onModalOk","onChangeTextArea","Option","Select","Sidebar","options","TeamOutlined","FormOutlined","footer","disabled","loading","label","showSearch","notFoundContent","defaultActiveFirstOption","showArrow","filterOption","mixRows","getBase64","Promise","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","UploadFiles","previewVisible","previewImage","fileList","setState","handlePreview","preview","originFileObj","action","listType","onPreview","onRemove","onCancel","LoginForm","handleSubmit","isSubmitting","initialValues","remember","onFinish","MailOutlined","LockOutlined","htmlType","withFormik","enableReinitialize","mapPropsToValues","validate","setSubmitting","userActions","history","push","displayName","RegisterForm","isValid","UserOutlined","setTimeout","CheckEmailInfo","verified","setVerified","search","info","InfoCircleTwoTone","fontSize","renderTextInfo","subTitle","extra","Auth","exact","path","component","withRouter","pop","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.25021146.chunk.js","sourcesContent":["import { combineReducers } from \"redux\"\r\n\r\nconst reducers = [\"messages\", \"dialogs\", \"user\", \"attachments\"]\r\n\r\nexport default combineReducers(\r\n    reducers.reduce((initial, name) => {\r\n        initial[name] = require(`./${name}`).default\r\n        return initial\r\n    }, {})\r\n)\r\n","const initialState = {\r\n    items: [],\r\n}\r\n\r\nexport default function attachments(state = initialState, { type, payload }) {\r\n    switch (type) {\r\n        case \"ATTACHMENTS:SET_ITEM\":\r\n            return {\r\n                ...state,\r\n                items: payload,\r\n            }\r\n        case \"ATTACHMENTS:REMOVE_ITEM\":\r\n            return {\r\n                ...state,\r\n                items: state.items.filter((item) => item.uid !== payload.uid),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {\r\n    items: [],\r\n    currentDialogId: window.location.pathname.split(\"dialog/\")[1],\r\n    isLoading: false,\r\n}\r\n\r\nexport default function dialogs(state = initialState, { type, payload }) {\r\n    switch (type) {\r\n        case \"DIALOGS:SET_ITEMS\":\r\n            return {\r\n                ...state,\r\n                items: payload,\r\n            }\r\n        case \"DIALOGS:SET_CURRENT_DIALOG_ID\":\r\n            return {\r\n                ...state,\r\n                currentDialogId: payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {\r\n    items: [],\r\n    isLoading: false,\r\n}\r\n\r\nexport default function messages(state = initialState, { type, payload }) {\r\n    switch (type) {\r\n        case \"MESSAGES:ADD_MESSAGE\":\r\n            return {\r\n                ...state,\r\n                items: [...state.items, payload],\r\n            }\r\n        case \"MESSAGES:SET_ITEMS\":\r\n            return {\r\n                ...state,\r\n                items: payload,\r\n                isLoading: false,\r\n            }\r\n        case \"MESSAGES:REMOVE_MESSAGE\":\r\n            return {\r\n                ...state,\r\n                items: state.items.filter((message) => message._id !== payload),\r\n            }\r\n        case \"MESSAGES:SET_IS_LOADING\":\r\n            return {\r\n                ...state,\r\n                isLoading: payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {\r\n    data: null,\r\n    token: window.localStorage.token,\r\n    isAuth: !!window.localStorage.token,\r\n}\r\n\r\nexport default function user(state = initialState, { type, payload }) {\r\n    switch (type) {\r\n        case \"USER:SET_DATA\":\r\n            return {\r\n                ...state,\r\n                data: payload,\r\n                isAuth: true,\r\n                token: window.localStorage.token,\r\n            }\r\n        case \"USER:SET_IS_AUTH\":\r\n            return {\r\n                ...state,\r\n                isAuth: payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","var map = {\n\t\"./\": 123,\n\t\"./attachments\": 222,\n\t\"./attachments.js\": 222,\n\t\"./dialogs\": 223,\n\t\"./dialogs.js\": 223,\n\t\"./index\": 123,\n\t\"./index.js\": 123,\n\t\"./messages\": 224,\n\t\"./messages.js\": 224,\n\t\"./user\": 225,\n\t\"./user.js\": 225\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 361;","import axios from \"axios\"\r\n\r\naxios.defaults.baseURL = window.location.origin\r\naxios.defaults.headers.common[\"token\"] = window.localStorage.token\r\n\r\nwindow.axios = axios\r\n\r\nexport default axios\r\n","import { axios } from \"core\"\r\n\r\nconst route = {\r\n    getAll: () => axios.get(\"/dialogs\"),\r\n    create: ({ partner, text }) => axios.post(\"/dialogs\", { partner, text }),\r\n}\r\n\r\nexport default route\r\n","import { axios } from \"core\"\r\n\r\nconst route = {\r\n    getAllByDialogId: (id) => axios.get(\"/messages?dialog=\" + id),\r\n    removeById: (id) => axios.delete(\"/messages?id=\" + id),\r\n    send: (text, dialogId, attachments) =>\r\n        axios.post(\"/messages\", {\r\n            text: text,\r\n            dialog_id: dialogId,\r\n            attachments,\r\n        }),\r\n}\r\n\r\nexport default route\r\n","import { axios } from \"core\"\r\n\r\nconst route = {\r\n    signin: (postData) => axios.post(\"/user/signin\", postData),\r\n    signup: (postData) => axios.post(\"/user/signup\", postData),\r\n    verifyHash: (hash) => axios.get(\"/user/verify?hash=\" + hash),\r\n    getMe: () => axios.get(\"/user/me\"),\r\n    findUsers: (query) => axios.get(\"/user/find?query=\" + query),\r\n}\r\n\r\nexport default route\r\n","import { axios } from \"core\"\r\n\r\nconst route = {\r\n    upload: (file) => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", file)\r\n        return axios.post(\"/files\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n    },\r\n}\r\n\r\nexport default route\r\n","import io from \"socket.io-client\"\r\n\r\nconst socket = io(window.location.origin.replace(\"3000\", \"3003\"))\r\n\r\nexport default socket\r\n","import { dialogsApi } from \"utils/api\"\r\nimport socket from \"core/socket\"\r\n\r\nconst actions = {\r\n    setDialogs: (items) => ({\r\n        type: \"DIALOGS:SET_ITEMS\",\r\n        payload: items,\r\n    }),\r\n    setCurrentDialogId: (id) => (dispatch) => {\r\n        socket.emit(\"DIALOGS:JOIN\", id)\r\n        dispatch({\r\n            type: \"DIALOGS:SET_CURRENT_DIALOG_ID\",\r\n            payload: id,\r\n        })\r\n    },\r\n    fetchDialogs: () => (dispatch) => {\r\n        dialogsApi.getAll().then(({ data }) => {\r\n            dispatch(actions.setDialogs(data))\r\n        })\r\n    },\r\n}\r\n\r\nexport default actions\r\n","import { messagesApi } from \"utils/api\"\r\n\r\nconst actions = {\r\n    setMessages: (items) => ({\r\n        type: \"MESSAGES:SET_ITEMS\",\r\n        payload: items,\r\n    }),\r\n    addMessage: (message) => (dispatch, getState) => {\r\n        const { dialogs } = getState()\r\n        const { currentDialogId } = dialogs\r\n\r\n        if (currentDialogId === message.dialog._id) {\r\n            dispatch({\r\n                type: \"MESSAGES:ADD_MESSAGE\",\r\n                payload: message,\r\n            })\r\n        }\r\n    },\r\n    fetchSendMessage: ({ text, dialogId, attachments }) => (dispatch) => {\r\n        return messagesApi.send(text, dialogId, attachments)\r\n    },\r\n    setIsLoading: (bool) => ({\r\n        type: \"MESSAGES:SET_IS_LOADING\",\r\n        payload: bool,\r\n    }),\r\n    removeMessageById: (id) => (dispatch) => {\r\n        if (window.confirm(\"Вы действительно хотите удалить сообщение?\")) {\r\n            messagesApi\r\n                .removeById(id)\r\n                .then(({ data }) => {\r\n                    dispatch({\r\n                        type: \"MESSAGES:REMOVE_MESSAGE\",\r\n                        payload: id,\r\n                    })\r\n                })\r\n                .catch(() => {\r\n                    dispatch(actions.setIsLoading(false))\r\n                })\r\n        }\r\n    },\r\n    fetchMessages: (dialogId) => (dispatch) => {\r\n        dispatch(actions.setIsLoading(true))\r\n        messagesApi\r\n            .getAllByDialogId(dialogId)\r\n            .then(({ data }) => {\r\n                dispatch(actions.setMessages(data))\r\n            })\r\n            .catch(() => {\r\n                dispatch(actions.setIsLoading(false))\r\n            })\r\n    },\r\n}\r\n\r\nexport default actions\r\n","const validateField = (key, touched, errors) => {\r\n    if (touched[key]) {\r\n\r\n        if (errors[key]) {\r\n            return \"error\"\r\n        } else {\r\n            return \"success\"\r\n        }\r\n\r\n    } else {\r\n        return ''\r\n    }\r\n}\r\n\r\nexport default validateField","export default function validateForm(number) {\r\n\tconst mins = Math.floor(number / 60);\r\n\tconst secs = (number % 60).toFixed();\r\n\treturn `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`;\r\n}\r\n","import { notification } from \"antd\"\r\n\r\nexport default function openNotification({\r\n    text,\r\n    type = \"info\",\r\n    title,\r\n    duration = 3,\r\n}) {\r\n    notification[type]({\r\n        message: title,\r\n        description: text,\r\n        duration: duration,\r\n    })\r\n}\r\n","import { useEffect } from \"react\"\r\n\r\nconst Click = (el, callback) => {\r\n    const handleClick = (e) => {\r\n        if (el && !el.contains(e.target)) {\r\n            callback()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"click\", handleClick)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"click\", handleClick)\r\n        }\r\n    })\r\n}\r\nexport default Click\r\n","const isAudio = (attachments) => {\r\n    if (!attachments) {\r\n        return null\r\n    }\r\n    const file = attachments[0]\r\n    return attachments.length && file.ext === \"webm\"\r\n}\r\n\r\nexport default isAudio\r\n","import { userApi } from \"utils/api\"\r\nimport { openNotification } from \"utils/helpers\"\r\n\r\nconst actions = {\r\n    setUserData: (data) => ({\r\n        type: \"USER:SET_DATA\",\r\n        payload: data,\r\n    }),\r\n    setIsAuth: (bool) => ({\r\n        type: \"USER:SET_IS_AUTH\",\r\n        payload: bool,\r\n    }),\r\n    fetchUserData: () => (dispatch) => {\r\n        userApi\r\n            .getMe()\r\n            .then(({ data }) => {\r\n                dispatch(actions.setUserData(data))\r\n            })\r\n            .catch(({ response }) => {\r\n                if (response.status === 403) {\r\n                    dispatch(actions.setIsAuth(false))\r\n                    delete window.localStorage.token\r\n                }\r\n            })\r\n    },\r\n    fetchUserLogin: (postData) => (dispatch) => {\r\n        return userApi\r\n            .signin(postData)\r\n            .then(({ data }) => {\r\n                const { token } = data\r\n                openNotification({\r\n                    text: \"Вы вошли в свой аккаунт\",\r\n                    type: \"success\",\r\n                    title: \"Авторизация прошла успешно\",\r\n                })\r\n                window.axios.defaults.headers.common[\"token\"] = token\r\n                window.localStorage[\"token\"] = token\r\n                dispatch(actions.fetchUserData())\r\n                dispatch(actions.setIsAuth(true))\r\n                return data\r\n            })\r\n            .catch(({ response }) => {\r\n                if (response.status === 403) {\r\n                    openNotification({\r\n                        text: \"Вы вошли в свой аккаунт\",\r\n                        type: \"success\",\r\n                        title: \"Авторизация прошла успешно\",\r\n                    })\r\n                }\r\n            })\r\n    },\r\n    fetchUserRegister: (postData) => (dispatch) => {\r\n        return userApi.signup(postData).then(({ data }) => {\r\n            return data\r\n        })\r\n    },\r\n}\r\n\r\nexport default actions\r\n","const actions = {\r\n    setAttachments: (items) => ({\r\n        type: \"ATTACHMENTS:SET_ITEM\",\r\n        payload: items,\r\n    }),\r\n    removeAttachments: (file) => ({\r\n        type: \"ATTACHMENTS:REMOVE_ITEM\",\r\n        payload: file,\r\n    }),\r\n}\r\n\r\nexport default actions\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst midleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeEnchancers(applyMiddleware(...midleware))\r\n)\r\n\r\nexport default store\r\n","export default function validateForm({ isAuth, values, errors }) {\r\n    const rules = {\r\n        email: (errors, value) => {\r\n            if (!value) {\r\n                errors.email = \"Введите E-mail\"\r\n            } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n            ) {\r\n                errors.email = \"Неверно введён E-mail\"\r\n            }\r\n        },\r\n        password: (errors, value) => {\r\n            if (!value) {\r\n                errors.password = \"Введите пароль\"\r\n            } else if (\r\n                !isAuth &&\r\n                !/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/i.test(value)\r\n            ) {\r\n                errors.password =\r\n                    \"Пароль должен содержать 8 символов среди которых минимум 1 заглавная буква, 1 прописная буква и 1 цифра\"\r\n            }\r\n        },\r\n        password_2: (errors, value) => {\r\n            if (!isAuth && value !== values.password) {\r\n                errors.password_2 = \"Пароли не совпадают\"\r\n            }\r\n        },\r\n        fullname: (errors, value) => {\r\n            if (!isAuth && !value) {\r\n                errors.fullname = \"Укажите своё имя\"\r\n            } else if (\r\n                !isAuth &&\r\n                !/^(?=.*[a-zA-Z0-9А-Яа-я])(?=.{6,})/i.test(value)\r\n            ) {\r\n                errors.fullname = \"Имя должно содержать не менее 6 символов\"\r\n            }\r\n        },\r\n    }\r\n\r\n    Object.keys(values).forEach(\r\n        (key) => rules[key] && rules[key](errors, values[key])\r\n    )\r\n}\r\n","import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { Button as BaseButton } from 'antd'\r\nimport classNames from 'classnames'\r\n\r\nimport './Button.scss'\r\n\r\nconst Button = props => (\r\n    <BaseButton  {...props} className={classNames('button', props.className, { 'button--large': props.size === \"large\" })} />\r\n)\r\n\r\n\r\nButton.propTypes = {\r\n    className: propTypes.string\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport './Block.scss'\r\n\r\nconst Block = ({ children, className }) => (\r\n    <div className={classNames('block', className)}>{children}</div>\r\n)\r\n\r\nexport default Block\r\n","import React, { useState, useRef, useEffect } from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport classNames from \"classnames\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faPlay, faPause } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { Popover, Button, Image } from \"antd\"\r\nimport { EllipsisOutlined } from \"@ant-design/icons\"\r\nimport ReactStringReplace from \"react-string-replace\"\r\nimport { Emoji } from \"emoji-mart\"\r\n\r\nimport { convertCurrentTime, isAudio } from \"utils/helpers\"\r\n\r\nimport { Time, ReadedIcon, Avatar } from \"../\"\r\n\r\nimport \"./Message.scss\"\r\n\r\nconst MessageAudio = ({ audio }) => {\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [progress, setProgress] = useState(0)\r\n    const [currentTime, setCurrentTime] = useState(0)\r\n    const audioElem = useRef(null)\r\n\r\n    useEffect(() => {\r\n        audioElem.current.addEventListener(\r\n            \"playing\",\r\n            () => {\r\n                setIsPlaying(true)\r\n            },\r\n            false\r\n        )\r\n        audioElem.current.addEventListener(\r\n            \"ended\",\r\n            () => {\r\n                setIsPlaying(false)\r\n                setProgress(0)\r\n            },\r\n            false\r\n        )\r\n        audioElem.current.addEventListener(\r\n            \"pause\",\r\n            () => {\r\n                setIsPlaying(false)\r\n            },\r\n            false\r\n        )\r\n        audioElem.current.addEventListener(\r\n            \"timeupdate\",\r\n            () => {\r\n                const duration =\r\n                    (audioElem.current && audioElem.current.duration) || 0\r\n                setCurrentTime(audioElem.current.currentTime)\r\n                setProgress((audioElem.current.currentTime / duration) * 100)\r\n            },\r\n            false\r\n        )\r\n    }, [])\r\n\r\n    const toggleplay = () => {\r\n        if (!isPlaying) {\r\n            audioElem.current.play()\r\n        } else {\r\n            audioElem.current.pause()\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"message__audio\">\r\n            <audio src={audio} preload=\"auto\" ref={audioElem} />\r\n            <div\r\n                className=\"message__audio-progress\"\r\n                style={{\r\n                    width: progress + \"%\",\r\n                }}\r\n            ></div>\r\n            <div className=\"message__audio-info\">\r\n                <div className=\"message__audio-btn\">\r\n                    <button onClick={toggleplay}>\r\n                        {isPlaying ? (\r\n                            <FontAwesomeIcon\r\n                                icon={faPause}\r\n                                color=\"#ffffff\"\r\n                                alt=\"Play\"\r\n                            />\r\n                        ) : (\r\n                            <FontAwesomeIcon\r\n                                icon={faPlay}\r\n                                color=\"#ffffff\"\r\n                                alt=\"Play\"\r\n                            />\r\n                        )}\r\n                    </button>\r\n                </div>\r\n                <div className=\"message__audio-wave\">\r\n                    <img\r\n                        src=\"https://raw.githubusercontent.com/Archakov06/react-chat-tutorial/cd5cd6442cb796b41f7354ba9587b38e87829592/src/assets/img/wave.svg\"\r\n                        alt=\"Wave\"\r\n                    />\r\n                </div>\r\n                <span className=\"message__audio-duration\">\r\n                    {convertCurrentTime(currentTime)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message = ({\r\n    user,\r\n    text,\r\n    date,\r\n    isMe,\r\n    readed,\r\n    attachments,\r\n    isTyping,\r\n    onRemoveMessage,\r\n}) => {\r\n    const renderAttachment = (item) => {\r\n        if (item.ext !== \"webm\") {\r\n            return (\r\n                <div className=\"message__attachments-item\" key={item._id}>\r\n                    <Image src={item.url} alt={item.filename} />\r\n                </div>\r\n            )\r\n        } else {\r\n            return <MessageAudio audio={item.url} />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\"message\", {\r\n                \"message--isme\": isMe,\r\n                \"message--is-typing\": isTyping,\r\n                \"message--image\":\r\n                    !isAudio(attachments) &&\r\n                    attachments &&\r\n                    attachments.length === 1 &&\r\n                    !text,\r\n                \"message--is-audio\": isAudio(attachments),\r\n            })}\r\n        >\r\n            <div className=\"message__content\">\r\n                <ReadedIcon isMe={isMe} isReaded={readed} />\r\n                <Popover\r\n                    content={\r\n                        <div>\r\n                            <Button onClick={onRemoveMessage}>\r\n                                Удалить сообщение\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    trigger=\"click\"\r\n                >\r\n                    <div className=\"message__icon-actions\">\r\n                        <Button\r\n                            type=\"link\"\r\n                            shape=\"circle\"\r\n                            icon={<EllipsisOutlined />}\r\n                        />\r\n                    </div>\r\n                </Popover>\r\n                <div className=\"message__avatar\">\r\n                    <Avatar user={user} />\r\n                </div>\r\n                <div className=\"message__info\">\r\n                    {(text || isTyping) && (\r\n                        <div className=\"message__bubble\">\r\n                            {text && (\r\n                                <p className=\"message__text\">\r\n                                    {ReactStringReplace(\r\n                                        text,\r\n                                        /:(.+?):/g,\r\n                                        (match, i) => (\r\n                                            <Emoji\r\n                                                key={i}\r\n                                                emoji={match}\r\n                                                set=\"apple\"\r\n                                                size={16}\r\n                                            />\r\n                                        )\r\n                                    )}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {attachments && (\r\n                        <div className=\"message__attachments\">\r\n                            {attachments.map((item) => renderAttachment(item))}\r\n                        </div>\r\n                    )}\r\n\r\n                    {date && (\r\n                        <span className=\"message__date\">\r\n                            <Time date={new Date(date)} />\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    user: {},\r\n}\r\n\r\nMessage.propTypes = {\r\n    avatar: propTypes.string,\r\n    text: propTypes.string,\r\n    data: propTypes.instanceOf(Date),\r\n    user: propTypes.object,\r\n    attachments: propTypes.array,\r\n    isMe: propTypes.bool,\r\n    isReaded: propTypes.bool,\r\n    audio: propTypes.string,\r\n}\r\n\r\nexport default Message\r\n","import React from \"react\"\r\nimport classNames from \"classnames\"\r\nimport format from \"date-fns/format\"\r\nimport isToday from \"date-fns/isToday\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { isAudio } from \"utils/helpers\"\r\n\r\nimport { ReadedIcon, Avatar } from \"../\"\r\n\r\nconst getMessageTime = (created_at) => {\r\n    if (isToday(created_at)) {\r\n        return format(created_at, \"HH:mm\")\r\n    } else {\r\n        return format(created_at, \"dd.MM.yyyy\")\r\n    }\r\n}\r\n\r\nconst renderLastMessage = (message, userId) => {\r\n    if (\r\n        !message.text &&\r\n        isAudio(message.attachments) &&\r\n        message.attachments.length\r\n    ) {\r\n        return \"Голосовое сообщение\"\r\n    } else if (!message.text && message.attachments.length) {\r\n        return \"Фото\"\r\n    } else if (message.text) {\r\n        return message.text\r\n    }\r\n}\r\n\r\nconst DialogItem = ({\r\n    unreaded,\r\n    isMe,\r\n    _id,\r\n    currentDialogId,\r\n    partner,\r\n    lastMessage,\r\n    userId,\r\n    author,\r\n}) => (\r\n    <Link to={`/dialog/${_id}`}>\r\n        <div\r\n            className={classNames(\"dialogs__item\", {\r\n                \"dialogs__item--online\":\r\n                    author._id === userId ? partner.isOnline : author.isOnline,\r\n                \"dialogs__item--selected\": currentDialogId === _id,\r\n            })}\r\n        >\r\n            <div className=\"dialogs__item-avatar\">\r\n                <Avatar user={author._id === userId ? partner : author} />\r\n            </div>\r\n            <div className=\"dialogs__item-info\">\r\n                <div className=\"dialogs__item-info-top\">\r\n                    <b>\r\n                        {author._id === userId\r\n                            ? partner.fullname\r\n                            : author.fullname}\r\n                    </b>\r\n                    <span>\r\n                        {getMessageTime(new Date(lastMessage.createdAt))}\r\n                    </span>\r\n                </div>\r\n                <div className=\"dialogs__item-info-bottom\">\r\n                    <p>\r\n                        {lastMessage.user._id === userId\r\n                            ? `Вы: ${renderLastMessage(lastMessage, userId)}`\r\n                            : renderLastMessage(lastMessage, userId)}\r\n                    </p>\r\n                    {isMe && (\r\n                        <ReadedIcon isMe={isMe} isReaded={lastMessage.readed} />\r\n                    )}\r\n                    {unreaded > 0 && (\r\n                        <div className=\"dialogs__item-info-bottom-count\">\r\n                            {lastMessage.unreaded > 9\r\n                                ? \"+9\"\r\n                                : lastMessage.unreaded}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Link>\r\n)\r\n\r\nexport default DialogItem\r\n","import React from \"react\"\r\nimport { Input, Empty } from \"antd\"\r\nimport orderBy from \"lodash/orderBy\"\r\n\r\nimport { DialogItem } from \"../\"\r\n\r\nimport \"./Dialogs.scss\"\r\n\r\nconst Dialogs = ({ items, userId, onSearch, currentDialogId, inputValue }) => (\r\n    <div className=\"dialogs\">\r\n        <div className=\"dialogs__search\">\r\n            <Input.Search\r\n                value={inputValue}\r\n                placeholder=\"Поиск среди контактов\"\r\n                onChange={(e) => onSearch(e.target.value)}\r\n            />\r\n        </div>\r\n        {items.length ? (\r\n            orderBy(items, [\"created_at\"], [\"desc\"]).map((item) => (\r\n                <DialogItem\r\n                    key={item._id}\r\n                    isMe={item.lastMessage.user._id === userId}\r\n                    currentDialogId={currentDialogId}\r\n                    {...item}\r\n                    userId={userId}\r\n                />\r\n            ))\r\n        ) : (\r\n            <Empty\r\n                image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n                description=\"Ничего не найдено\"\r\n            />\r\n        )}\r\n    </div>\r\n)\r\n\r\nexport default Dialogs\r\n","import React, { Fragment } from \"react\"\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\"\r\nimport ruLocale from \"date-fns/locale/ru\"\r\nimport propTypes from \"prop-types\"\r\n\r\nconst Time = ({ date }) => (\r\n    <Fragment>\r\n        {formatDistanceToNow(date, { addSuffix: true, locale: ruLocale })}\r\n    </Fragment>\r\n)\r\n\r\nTime.propTypes = {\r\n    date: propTypes.instanceOf(Date),\r\n}\r\n\r\nexport default Time\r\n","import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckDouble, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst ReadedIcon = ({ isMe, isReaded }) => \r\n    isMe && (\r\n        isReaded ? (\r\n            <FontAwesomeIcon\r\n                className=\"message__icon-readed\"\r\n                icon={faCheckDouble}\r\n                color=\"#3674ff\"\r\n                alt=\"Readed icon\"\r\n            />) : (\r\n                <FontAwesomeIcon\r\n                    className=\"message__icon-readed\"\r\n                    icon={faCheck}\r\n                    color=\"#3674ff\"\r\n                    alt=\"No readed icon\"\r\n                />\r\n            )\r\n    )\r\n\r\nReadedIcon.propTypes = {\r\n    isMe: propTypes.bool,\r\n    isReaded: propTypes.bool\r\n}\r\n\r\nexport default ReadedIcon\r\n","import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\n\r\nimport { generateAvatar } from \"utils/helpers\"\r\n\r\nimport \"./Avatar.scss\"\r\n\r\nconst Avatar = ({ user }) => {\r\n    if (user.avatar) {\r\n        return (\r\n            <img\r\n                className=\"avatar\"\r\n                src={user.avatar}\r\n                alt={`Avatar ${user.fullname}`}\r\n            />\r\n        )\r\n    } else {\r\n        const { color, colorLighten } = generateAvatar(user._id)\r\n        const firstChar = user.fullname[0].toUpperCase()\r\n        return (\r\n            <div\r\n                style={{\r\n                    background: `linear-gradient(135deg, ${color} 0%, ${colorLighten} 96.52%)`,\r\n                }}\r\n                className=\"avatar avatar--symbol\"\r\n            >\r\n                {firstChar}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAvatar.propTypes = {\r\n    avatar: propTypes.string,\r\n}\r\n\r\nexport default Avatar\r\n","import tinycolor from \"tinycolor2\"\r\n\r\nconst getCorrectIndex = (number) => {\r\n    return number > 255 ? 255 : number < 0 ? 0 : number\r\n}\r\n\r\nexport default function generateAvatar(hash) {\r\n    const [r, g, b] = hash\r\n        .substr(0, 3)\r\n        .split(\"\")\r\n        .map((char) => getCorrectIndex(char.charCodeAt(0)))\r\n    return {\r\n        color: tinycolor({ r, g, b }).lighten(20).saturate(20).toHexString(),\r\n        colorLighten: tinycolor({ r, g, b })\r\n            .lighten(40)\r\n            .saturate(30)\r\n            .toHexString(),\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport classNames from \"classnames\"\r\n\r\nimport \"./Status.scss\"\r\n\r\nconst Status = ({ online, fullname }) => (\r\n    <div className=\"chat__dialog-header\">\r\n        <div className=\"chat__dialog-header-center\">\r\n            <b className=\"chat__dialog-header-username\">{fullname}</b>\r\n            <div className=\"chat__dialog-header-status\">\r\n                <span\r\n                    className={classNames(\"status\", {\r\n                        \"status--online\": online,\r\n                    })}\r\n                >\r\n                    {online ? \"онлайн\" : \"офлайн\"}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nStatus.propTypes = {\r\n    online: propTypes.bool,\r\n}\r\n\r\nexport default Status\r\n","import React, { Fragment } from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport { Input, Button } from \"antd\"\r\nimport {\r\n    SmileOutlined,\r\n    CameraOutlined,\r\n    AudioOutlined,\r\n    SendOutlined,\r\n    CloseSquareOutlined,\r\n    StopOutlined,\r\n    LoadingOutlined,\r\n} from \"@ant-design/icons\"\r\nimport { UploadField } from \"@navjobs/upload\"\r\nimport { Picker } from \"emoji-mart\"\r\n\r\nimport { UploadFiles } from \"components\"\r\n\r\nimport \"./ChatInput.scss\"\r\n\r\nconst { TextArea } = Input\r\n\r\nconst ChatInput = (props) => {\r\n    const {\r\n        value,\r\n        emojiPickerVisible,\r\n        setValue,\r\n        toggleEmojiPicker,\r\n        addEmoji,\r\n        handleSendMessage,\r\n        sendMessage,\r\n        attachments,\r\n        onSelectFiles,\r\n        onRecord,\r\n        isRecording,\r\n        onHideRecord,\r\n        isLoading,\r\n        removeAttachments,\r\n    } = props\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"chat-input\">\r\n                <div>\r\n                    <div className=\"chat-input__smile-btn\">\r\n                        <div className=\"chat-input__emoji-picker\">\r\n                            {emojiPickerVisible && (\r\n                                <Picker\r\n                                    onSelect={(emojiTag) => addEmoji(emojiTag)}\r\n                                    set=\"apple\"\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <Button\r\n                            type=\"link\"\r\n                            shape=\"circle\"\r\n                            icon={<SmileOutlined />}\r\n                            onClick={toggleEmojiPicker}\r\n                        />\r\n                    </div>\r\n                    {!isRecording ? (\r\n                        <TextArea\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            onKeyUp={handleSendMessage}\r\n                            size=\"large\"\r\n                            placeholder=\"Введите текст сообщения\"\r\n                            value={value}\r\n                            autoSize={{ minRows: 1, maxRows: 6 }}\r\n                        />\r\n                    ) : (\r\n                        <div className=\"chat-input__record-status\">\r\n                            <i></i>\r\n                            Recording...\r\n                        </div>\r\n                    )}\r\n                    <div className=\"chat-input__actions\">\r\n                        {!isRecording ? (\r\n                            <UploadField\r\n                                onFiles={onSelectFiles}\r\n                                containerProps={{\r\n                                    className: \"chat-input__actions-upload\",\r\n                                }}\r\n                                uploadProps={{\r\n                                    accept: \".jpg,.jpeg,.png,.gif,.bmp\",\r\n                                    multiple: \"multiple\",\r\n                                }}\r\n                            >\r\n                                <Button\r\n                                    type=\"link\"\r\n                                    shape=\"circle\"\r\n                                    icon={<CameraOutlined />}\r\n                                />\r\n                            </UploadField>\r\n                        ) : (\r\n                            <Button\r\n                                type=\"link\"\r\n                                shape=\"circle\"\r\n                                icon={<StopOutlined className=\"stop\" />}\r\n                                onClick={onHideRecord}\r\n                            />\r\n                        )}\r\n\r\n                        {isLoading ? (\r\n                            <Button\r\n                                type=\"link\"\r\n                                shape=\"circle\"\r\n                                icon={<LoadingOutlined />}\r\n                            />\r\n                        ) : isRecording || value || attachments.length ? (\r\n                            <Button\r\n                                onClick={sendMessage}\r\n                                type=\"link\"\r\n                                shape=\"circle\"\r\n                                icon={\r\n                                    !isRecording ? (\r\n                                        <SendOutlined />\r\n                                    ) : (\r\n                                        <CloseSquareOutlined className=\"recording\" />\r\n                                    )\r\n                                }\r\n                            />\r\n                        ) : (\r\n                            <div className=\"chat-input__record-btn\">\r\n                                <Button\r\n                                    onClick={onRecord}\r\n                                    type=\"link\"\r\n                                    shape=\"circle\"\r\n                                    icon={<AudioOutlined />}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {attachments.length > 0 && (\r\n                    <div className=\"chat-input__attachments\">\r\n                        <UploadFiles\r\n                            attachments={attachments}\r\n                            removeAttachments={removeAttachments}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nChatInput.propTypes = {\r\n    className: propTypes.string,\r\n}\r\n\r\nexport default ChatInput\r\n","import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport { Empty, Spin } from \"antd\"\r\nimport classNames from \"classnames\"\r\n\r\nimport { Message } from \"../\"\r\n\r\nimport \"./Messages.scss\"\r\n\r\nconst Messages = ({\r\n    blockRef,\r\n    isLoading,\r\n    items,\r\n    user,\r\n    onRemoveMessage,\r\n    blockHeight,\r\n}) => {\r\n    return (\r\n        <div\r\n            className=\"chat__dialog-messages\"\r\n            style={{ height: `calc(100% - ${blockHeight}px)` }}\r\n        >\r\n            <div\r\n                className={classNames(\"messages\", {\r\n                    \"messages--loading\": isLoading,\r\n                })}\r\n                ref={blockRef}\r\n            >\r\n                {isLoading || !user ? (\r\n                    <Spin tip=\"Загрузка...\" size=\"large\" />\r\n                ) : items && !isLoading ? (\r\n                    items.length > 0 ? (\r\n                        items.map((item) => (\r\n                            <Message\r\n                                key={item._id}\r\n                                {...item}\r\n                                isMe={user._id === item.user._id}\r\n                                onRemoveMessage={onRemoveMessage.bind(\r\n                                    this,\r\n                                    item._id\r\n                                )}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <Empty description=\"Нет сообщений\" />\r\n                    )\r\n                ) : (\r\n                    <Empty description=\"Откройте диалог\" />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMessages.propTypes = {\r\n    items: propTypes.array,\r\n}\r\n\r\nexport default Messages\r\n","import React from \"react\"\r\nimport { Form, Input } from \"antd\"\r\n\r\nimport { validateField } from \"utils/helpers\"\r\n\r\nconst FormField = ({\r\n    name,\r\n    placeholder,\r\n    prefix,\r\n    type,\r\n    touched,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    values,\r\n}) => {\r\n    return (\r\n        <Form.Item\r\n            validateStatus={validateField(name, touched, errors)}\r\n            help={!touched[name] ? \" \" : errors[name]}\r\n            hasFeedback\r\n        >\r\n            <Input\r\n                value={values}\r\n                id={name}\r\n                prefix={prefix}\r\n                placeholder={placeholder}\r\n                size=\"large\"\r\n                type={type}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n        </Form.Item>\r\n    )\r\n}\r\n\r\nexport default FormField\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport socket from \"core/socket\"\r\n\r\nimport { dialogsActions } from \"redux/actions\"\r\nimport { Dialogs as BaseDialogs } from \"components\"\r\n\r\nconst Dialogs = ({ fetchDialogs, currentDialogId, items, userId, dialogs }) => {\r\n    const [inputValue, setValue] = useState(\"\")\r\n    const [filtred, setFiltredItems] = useState(Array.from(items))\r\n\r\n    console.log(items)\r\n\r\n    const onChangeInput = (value = \"\") => {\r\n        setFiltredItems(\r\n            items.filter(\r\n                (dialog) =>\r\n                    dialog.author.fullname\r\n                        .toLowerCase()\r\n                        .indexOf(value.toLowerCase()) >= 0 ||\r\n                    dialog.partner.fullname\r\n                        .toLowerCase()\r\n                        .indexOf(value.toLowerCase()) >= 0\r\n            )\r\n        )\r\n        setValue(value)\r\n    }\r\n\r\n    window.fetchDialogs = fetchDialogs\r\n\r\n    useEffect(() => {\r\n        if (items.length) {\r\n            onChangeInput()\r\n        }\r\n    }, [items])\r\n\r\n    useEffect(() => {\r\n        fetchDialogs()\r\n\r\n        socket.on(\"SERVER:DIALOG_CREATED\", fetchDialogs)\r\n        socket.on(\"SERVER:MESSAGE_CREATED\", fetchDialogs)\r\n\r\n        return () => {\r\n            socket.removeListener(\"SERVER:DIALOG_CREATED\", fetchDialogs)\r\n            socket.removeListener(\"SERVER:MESSAGE_CREATED\", fetchDialogs)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <BaseDialogs\r\n            userId={userId}\r\n            items={filtred}\r\n            onSearch={onChangeInput}\r\n            inputValue={inputValue}\r\n            currentDialogId={currentDialogId}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(({ dialogs }) => dialogs, dialogsActions)(Dialogs)\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport socket from \"core/socket\"\r\n\r\nimport { messagesActions } from \"redux/actions\"\r\nimport { Messages as BaseMessages } from \"components\"\r\n\r\nconst Dialogs = ({\r\n    items,\r\n    fetchMessages,\r\n    currentDialogId,\r\n    addMessage,\r\n    isLoading,\r\n    user,\r\n    removeMessageById,\r\n    attachments,\r\n}) => {\r\n    const [blockHeight, setBlockHeight] = useState(135)\r\n\r\n    const messagesRef = useRef(null)\r\n\r\n    const onNewMessage = (data) => {\r\n        addMessage(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (attachments.length) {\r\n            setBlockHeight(245)\r\n        } else {\r\n            setBlockHeight(135)\r\n        }\r\n    }, [attachments])\r\n\r\n    useEffect(() => {\r\n        if (!currentDialogId) {\r\n            return null\r\n        }\r\n\r\n        if (currentDialogId) {\r\n            fetchMessages(currentDialogId)\r\n        }\r\n        socket.on(\"SERVER:MESSAGE_CREATED\", onNewMessage)\r\n\r\n        return () => {\r\n            socket.removeListener(\"SERVER:MESSAGE_CREATED\", onNewMessage)\r\n        }\r\n    }, [currentDialogId])\r\n\r\n    useEffect(() => {\r\n        if (!currentDialogId) {\r\n            return null\r\n        }\r\n        messagesRef.current.scrollTo(0, 99999999)\r\n    }, [items])\r\n\r\n    return currentDialogId ? (\r\n        <BaseMessages\r\n            user={user}\r\n            blockRef={messagesRef}\r\n            items={items}\r\n            isLoading={isLoading && !user}\r\n            onRemoveMessage={removeMessageById}\r\n            blockHeight={blockHeight}\r\n        />\r\n    ) : null\r\n}\r\n\r\nexport default connect(\r\n    ({ dialogs, messages, user, attachments }) => ({\r\n        currentDialogId: dialogs.currentDialogId,\r\n        items: messages.items,\r\n        isLoading: messages.isLoading,\r\n        user: user.data,\r\n        attachments: attachments.items,\r\n    }),\r\n    messagesActions\r\n)(Dialogs)\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Empty } from \"antd\"\r\n\r\nimport { uploadApi } from \"utils/api\"\r\nimport { messagesActions, attachmentsActions } from \"redux/actions\"\r\n\r\nimport { ChatInput as BaseChactInput } from \"components\"\r\n\r\nconst ChatInput = (props) => {\r\n    const {\r\n        dialogs: { currentDialogId },\r\n        attachments,\r\n        fetchSendMessage,\r\n        setAttachments,\r\n        removeAttachments,\r\n    } = props\r\n\r\n    window.navigator.getUserMedia =\r\n        window.navigator.getUserMedia ||\r\n        window.navigator.mozGetUserMedia ||\r\n        window.navigator.webkitGetUserMedia ||\r\n        window.navigator.msGetUserMedia\r\n\r\n    const [value, setValue] = useState(\"\")\r\n    const [isRecording, setIsRecording] = useState(false)\r\n    const [mediaRecorder, setMediaRecorder] = useState(null)\r\n    const [emojiPickerVisible, setEmojiPicker] = useState(false)\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    const addEmoji = ({ colons }) => {\r\n        setValue((value + \" \" + colons).trim())\r\n    }\r\n\r\n    const toggleEmojiPicker = () => {\r\n        setEmojiPicker(!emojiPickerVisible)\r\n    }\r\n\r\n    const onRecord = () => {\r\n        if (window.navigator.getUserMedia) {\r\n            window.navigator.getUserMedia({ audio: true }, onRecording, onError)\r\n        }\r\n    }\r\n\r\n    const onRecording = (stream) => {\r\n        const recorder = new MediaRecorder(stream)\r\n        setMediaRecorder(recorder)\r\n        recorder.start()\r\n\r\n        recorder.onstart = () => {\r\n            setIsRecording(true)\r\n        }\r\n\r\n        recorder.onstop = () => {\r\n            setIsRecording(false)\r\n        }\r\n\r\n        recorder.ondataavailable = (e) => {\r\n            const file = new File([e.data], \"audio.webm\")\r\n            setLoading(true)\r\n            uploadApi.upload(file).then(({ data }) => {\r\n                sendAudio(data.file._id).then(() => {\r\n                    setLoading(false)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log(err)\r\n    }\r\n\r\n    const handleOutsideClick = (el, e) => {\r\n        if (el && !el.contains(e.target)) {\r\n            setEmojiPicker(false)\r\n        }\r\n    }\r\n\r\n    const sendAudio = (audioId) => {\r\n        return fetchSendMessage({\r\n            text: null,\r\n            dialogId: currentDialogId,\r\n            attachments: [audioId],\r\n        })\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (isRecording) {\r\n            mediaRecorder.stop()\r\n        } else {\r\n            fetchSendMessage({\r\n                text: value,\r\n                dialogId: currentDialogId,\r\n                attachments: attachments.map((file) => file.uid),\r\n            })\r\n            setValue(\"\")\r\n            setAttachments([])\r\n        }\r\n    }\r\n\r\n    const handleSendMessage = (e) => {\r\n        if (e.keyCode === 13) {\r\n            sendMessage()\r\n        }\r\n    }\r\n\r\n    const onHideRecord = () => {\r\n        setIsRecording(false)\r\n    }\r\n\r\n    const onSelectFiles = async (files) => {\r\n        let uploaded = []\r\n        for (let i = 0; i < files.length; i++) {\r\n            const file = files[i]\r\n            const uid = Math.round(Math.random() * 1000)\r\n            uploaded = [\r\n                ...uploaded,\r\n                {\r\n                    uid: uid,\r\n                    name: file.name,\r\n                    status: \"uploading\",\r\n                },\r\n            ]\r\n            setAttachments(uploaded)\r\n            //eslint-disable-next-line no-loop-func\r\n            await uploadApi.upload(file).then(({ data }) => {\r\n                uploaded = uploaded.map((item) => {\r\n                    if (item.uid === uid) {\r\n                        return {\r\n                            uid: data.file._id,\r\n                            name: data.file.filename,\r\n                            status: \"done\",\r\n                            url: data.file.url,\r\n                        }\r\n                    }\r\n                    return item\r\n                })\r\n            })\r\n        }\r\n        setAttachments(uploaded)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const el = document.querySelector(\".chat-input__smile-btn\")\r\n\r\n        document.addEventListener(\"click\", handleOutsideClick.bind(this, el))\r\n\r\n        return () => {\r\n            document.removeEventListener(\r\n                \"click\",\r\n                handleOutsideClick.bind(this, el)\r\n            )\r\n        }\r\n    }, [])\r\n\r\n    if (!currentDialogId) {\r\n        return <Empty description=\"Откройте диалог\" />\r\n    }\r\n\r\n    return (\r\n        <BaseChactInput\r\n            value={value}\r\n            setValue={setValue}\r\n            emojiPickerVisible={emojiPickerVisible}\r\n            toggleEmojiPicker={toggleEmojiPicker}\r\n            addEmoji={addEmoji}\r\n            handleSendMessage={handleSendMessage}\r\n            sendMessage={sendMessage}\r\n            attachments={attachments}\r\n            onSelectFiles={onSelectFiles}\r\n            isRecording={isRecording}\r\n            onRecord={onRecord}\r\n            onHideRecord={onHideRecord}\r\n            isLoading={isLoading}\r\n            removeAttachments={removeAttachments}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    ({ dialogs, attachments }) => ({\r\n        dialogs,\r\n        attachments: attachments.items,\r\n    }),\r\n    { ...messagesActions, ...attachmentsActions }\r\n)(ChatInput)\r\n","import React from \"react\"\r\nimport { Status as BaseStatus } from \"components\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst Status = ({ currentDialogId, user, dialogs }) => {\r\n    if (!dialogs.length || !currentDialogId) {\r\n        return null\r\n    }\r\n\r\n    const currentDialogObj = dialogs.filter(\r\n        (dialog) => dialog._id === currentDialogId\r\n    )[0]\r\n\r\n    let partner = {}\r\n\r\n    if (currentDialogObj.author._id === user._id) {\r\n        partner = currentDialogObj.partner\r\n    } else {\r\n        partner = currentDialogObj.author\r\n    }\r\n\r\n    return <BaseStatus online={partner.isOnline} fullname={partner.fullname} />\r\n}\r\n\r\nexport default connect(({ dialogs, user }) => ({\r\n    dialogs: dialogs.items,\r\n    currentDialogId: dialogs.currentDialogId,\r\n    user: user.data,\r\n}))(Status)\r\n","import React, { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { userApi, dialogsApi } from \"utils/api\"\r\n\r\nimport { Sidebar } from \"components\"\r\n\r\nconst SidebarContainer = ({ user }) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n    const [messageText, setMessageText] = useState(\"\")\r\n    const [users, setUsers] = useState([])\r\n    const [isSearching, setIsSearching] = useState(false)\r\n    const [selectedUserId, setSelectedUserId] = useState(null)\r\n\r\n    const onClose = () => {\r\n        setVisible(false)\r\n    }\r\n\r\n    const onShow = () => {\r\n        setVisible(true)\r\n    }\r\n\r\n    const handleChangeInput = (value) => {\r\n        setInputValue(value)\r\n    }\r\n\r\n    const onSelectUser = (userId) => {\r\n        setSelectedUserId(userId)\r\n    }\r\n\r\n    const onAddDialog = () => {\r\n        dialogsApi\r\n            .create({\r\n                partner: selectedUserId,\r\n                text: messageText,\r\n            })\r\n            .then(({ data }) => {\r\n                console.log(data)\r\n                onClose()\r\n            })\r\n            .catch(() => {\r\n                setIsSearching(false)\r\n            })\r\n    }\r\n\r\n    const onSearch = (value) => {\r\n        setIsSearching(true)\r\n        userApi\r\n            .findUsers(value)\r\n            .then(({ data }) => {\r\n                setUsers(data)\r\n                setIsSearching(false)\r\n            })\r\n            .catch(() => {\r\n                setIsSearching(false)\r\n            })\r\n    }\r\n\r\n    const onChangeTextArea = (e) => {\r\n        setMessageText(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Sidebar\r\n            user={user}\r\n            visible={visible}\r\n            onClose={onClose}\r\n            onShow={onShow}\r\n            inputValue={inputValue}\r\n            onSearch={onSearch}\r\n            onChangeInput={handleChangeInput}\r\n            onSelectUser={onSelectUser}\r\n            users={users}\r\n            onModalOk={onAddDialog}\r\n            onChangeTextArea={onChangeTextArea}\r\n            messageText={messageText}\r\n            isSearching={isSearching}\r\n            selectedUserId={selectedUserId}\r\n        />\r\n    )\r\n}\r\n\r\nexport default connect(({ user }) => ({ user: user.data }))(SidebarContainer)\r\n","import React from \"react\"\r\nimport { Button, Modal, Select, Input, Form } from \"antd\"\r\nimport { TeamOutlined, FormOutlined } from \"@ant-design/icons\"\r\n\r\nimport { Dialogs } from \"containers\"\r\n\r\nconst { Option } = Select\r\nconst { TextArea } = Input\r\n\r\nconst Sidebar = ({\r\n    user,\r\n    onShow,\r\n    onClose,\r\n    visible,\r\n    users,\r\n    onChangeInput,\r\n    inputValue,\r\n    onSearch,\r\n    onSelectUser,\r\n    onModalOk,\r\n    isSearching,\r\n    onChangeTextArea,\r\n    messageText,\r\n    selectedUserId,\r\n}) => {\r\n    const options = users.map((user) => (\r\n        <Option key={user._id}>{user.fullname}</Option>\r\n    ))\r\n    return (\r\n        <div className=\"chat__sidebar\">\r\n            <div className=\"chat__sidebar-header\">\r\n                <div className=\"\">\r\n                    <TeamOutlined />\r\n                    <span>Список диалогов</span>\r\n                </div>\r\n                <Button\r\n                    onClick={onShow}\r\n                    type=\"link\"\r\n                    shape=\"circle\"\r\n                    icon={<FormOutlined />}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"chat__sidebar-dialogs\">\r\n                <Dialogs userId={user && user._id} />\r\n            </div>\r\n            <Modal\r\n                title=\"Создать диалог\"\r\n                visible={visible}\r\n                footer={[\r\n                    <Button key=\"back\" onClick={onClose}>\r\n                        Закрыть\r\n                    </Button>,\r\n                    <Button\r\n                        disabled={!messageText}\r\n                        key=\"submit\"\r\n                        type=\"primary\"\r\n                        loading={isSearching}\r\n                        onClick={onModalOk}\r\n                    >\r\n                        Создать\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <Form>\r\n                    <Form.Item label=\"Введите имя или почту пользователя\">\r\n                        <Select\r\n                            showSearch\r\n                            value={inputValue}\r\n                            placeholder=\"Введите имя или почту пользователя\"\r\n                            style={{ width: \"100%\" }}\r\n                            onSearch={onSearch}\r\n                            onChange={onChangeInput}\r\n                            notFoundContent={\"Пользователь не найден\"}\r\n                            defaultActiveFirstOption={false}\r\n                            showArrow={false}\r\n                            filterOption={false}\r\n                            onSelect={onSelectUser}\r\n                        >\r\n                            {options}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    {selectedUserId && (\r\n                        <Form.Item label=\"Введите сообщение\">\r\n                            <TextArea\r\n                                placeholder=\"\"\r\n                                autoSize={{ mixRows: 3, maxRows: 10 }}\r\n                                onChange={onChangeTextArea}\r\n                                value={messageText}\r\n                            />\r\n                        </Form.Item>\r\n                    )}\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nSidebar.defaultProps = {\r\n    users: [],\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { Upload, Modal } from \"antd\"\r\nimport { PlusOutlined } from \"@ant-design/icons\"\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onload = () => resolve(reader.result)\r\n        reader.onerror = (error) => reject(error)\r\n    })\r\n}\r\n\r\nconst UploadFiles = ({ attachments, removeAttachments }) => {\r\n    const [state, setState] = useState({\r\n        previewVisible: false,\r\n        previewImage: \"\",\r\n        fileList: attachments,\r\n    })\r\n\r\n    const handleCancel = () => setState({ ...state, previewVisible: false })\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj)\r\n        }\r\n\r\n        setState({\r\n            ...state,\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n        })\r\n    }\r\n\r\n    const handleChange = ({ fileList }) => setState({ ...state, fileList })\r\n\r\n    useEffect(() => {\r\n        setState({\r\n            ...state,\r\n            fileList: attachments,\r\n        })\r\n    }, [attachments])\r\n\r\n    const onRemove = (file) => {\r\n        console.log(file)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={state.fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n                onRemove={(file) => removeAttachments(file)}\r\n            ></Upload>\r\n            <Modal\r\n                visible={state.previewVisible}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img\r\n                    alt=\"example\"\r\n                    style={{ width: \"100%\" }}\r\n                    src={state.previewImage}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nUploadFiles.defaultProps = {\r\n    attachments: [],\r\n}\r\n\r\nexport default UploadFiles\r\n","import React from \"react\"\r\nimport { Form } from \"antd\"\r\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { Button, Block, FormField } from \"components\"\r\n\r\nconst LoginForm = (props) => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    } = props\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Войти в аккаунт</h2>\r\n                <p>Пожалуйста, войдите в свой аккаунт</p>\r\n            </div>\r\n            <Block>\r\n                <Form\r\n                    name=\"normal_login\"\r\n                    className=\"login-form\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={handleSubmit}\r\n                >\r\n                    <FormField\r\n                        value={values}\r\n                        placeholder=\"E-mail\"\r\n                        prefix={\r\n                            <MailOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        touched={touched}\r\n                        errors={errors}\r\n                        handleChange={handleChange}\r\n                        handleBlur={handleBlur}\r\n                    />\r\n                    <FormField\r\n                        value={values}\r\n                        placeholder=\"Пароль\"\r\n                        prefix={\r\n                            <LockOutlined className=\"site-form-item-icon\" />\r\n                        }\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        touched={touched}\r\n                        errors={errors}\r\n                        handleChange={handleChange}\r\n                        handleBlur={handleBlur}\r\n                    />\r\n                    <Form.Item>\r\n                        <Button\r\n                            disabled={isSubmitting}\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"login-form-button button\"\r\n                            size=\"large\"\r\n                        >\r\n                            Войти в аккаунт\r\n                        </Button>\r\n                    </Form.Item>\r\n                    <Link className=\"auth__register-link\" to=\"/signup\">\r\n                        Зарегистрироваться\r\n                    </Link>\r\n                </Form>\r\n            </Block>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import LoginForm from './conteiners/LoginForm'\r\n\r\nexport default LoginForm","import { withFormik } from \"formik\"\r\n\r\nimport validateForm from \"utils/validate\"\r\nimport { userActions } from \"redux/actions\"\r\nimport store from \"redux/store\"\r\n\r\nimport LoginForm from \"../components/LoginForm\"\r\n\r\nconst loginFormContainer = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: \"\",\r\n        password: \"\",\r\n    }),\r\n    validate: (values) => {\r\n        let errors = {}\r\n\r\n        validateForm({ isAuth: true, values, errors })\r\n\r\n        return errors\r\n    },\r\n    handleSubmit: (values, { setSubmitting, props }) => {\r\n        store\r\n            .dispatch(userActions.fetchUserLogin(values))\r\n            .then(({ status }) => {\r\n                if (status === \"success\") {\r\n                    props.history.push(\"/\")\r\n                }\r\n                setSubmitting(false)\r\n            })\r\n            .catch(() => {\r\n                setSubmitting(true)\r\n            })\r\n    },\r\n    displayName: \"LoginForm\",\r\n})(LoginForm)\r\n\r\nexport default loginFormContainer\r\n","import React from \"react\"\r\nimport { Form } from \"antd\"\r\nimport {\r\n    UserOutlined,\r\n    LockOutlined,\r\n    MailOutlined,\r\n    InfoCircleTwoTone,\r\n} from \"@ant-design/icons\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport { Button, Block, FormField } from \"components\"\r\n\r\nconst success = false\r\n\r\nconst RegisterForm = (props) => {\r\n    const {\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isValid,\r\n        values,\r\n    } = props\r\n    return (\r\n        <div>\r\n            <div className=\"auth__top\">\r\n                <h2>Регистрация</h2>\r\n                <p>Для входа в чат, вам нужно зарегистрироваться</p>\r\n            </div>\r\n            <Block>\r\n                {!success ? (\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={handleSubmit}\r\n                    >\r\n                        <FormField\r\n                            value={values}\r\n                            placeholder=\"E-mail\"\r\n                            prefix={\r\n                                <MailOutlined className=\"site-form-item-icon\" />\r\n                            }\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            touched={touched}\r\n                            errors={errors}\r\n                            handleChange={handleChange}\r\n                            handleBlur={handleBlur}\r\n                        />\r\n                        <FormField\r\n                            value={values}\r\n                            placeholder=\"Ваше имя\"\r\n                            prefix={\r\n                                <UserOutlined className=\"site-form-item-icon\" />\r\n                            }\r\n                            name=\"fullname\"\r\n                            type=\"text\"\r\n                            touched={touched}\r\n                            errors={errors}\r\n                            handleChange={handleChange}\r\n                            handleBlur={handleBlur}\r\n                        />\r\n                        <FormField\r\n                            value={values}\r\n                            placeholder=\"Пароль\"\r\n                            prefix={\r\n                                <LockOutlined className=\"site-form-item-icon\" />\r\n                            }\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            touched={touched}\r\n                            errors={errors}\r\n                            handleChange={handleChange}\r\n                            handleBlur={handleBlur}\r\n                        />\r\n                        <FormField\r\n                            value={values}\r\n                            placeholder=\"Повторите пароль\"\r\n                            prefix={\r\n                                <LockOutlined className=\"site-form-item-icon\" />\r\n                            }\r\n                            name=\"password_2\"\r\n                            type=\"password\"\r\n                            touched={touched}\r\n                            errors={errors}\r\n                            handleChange={handleChange}\r\n                            handleBlur={handleBlur}\r\n                        />\r\n                        <Form.Item>\r\n                            <Button\r\n                                onClick={handleSubmit}\r\n                                disabled={!isValid}\r\n                                type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button button\"\r\n                                size=\"large\"\r\n                            >\r\n                                Зарегистрироваться\r\n                            </Button>\r\n                        </Form.Item>\r\n                        <Link className=\"auth__register-link\" to=\"/signin\">\r\n                            Войти в аккаунт\r\n                        </Link>\r\n                    </Form>\r\n                ) : (\r\n                    <div className=\"auth__success-block\">\r\n                        <div>\r\n                            <InfoCircleTwoTone style={{ fontSize: \"50px\" }} />\r\n                        </div>\r\n                        <h2>Подтвердите свой аккаунт</h2>\r\n                        <p>\r\n                            На вашу почту отправленно письмо с ссылкой на\r\n                            подтверждение аккаунта.\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </Block>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import RegisterForm from './conteiners/RegisterForm'\r\n\r\nexport default RegisterForm","import { withFormik } from \"formik\"\r\n\r\nimport validateForm from \"utils/validate\"\r\nimport { userActions } from \"redux/actions\"\r\nimport store from \"redux/store\"\r\n\r\nimport RegisterForm from \"../components/RegisterForm\"\r\n\r\nexport default withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: () => ({\r\n        email: \"\",\r\n        fullname: \"\",\r\n        password: \"\",\r\n        password_2: \"\",\r\n    }),\r\n    validate: (values) => {\r\n        let errors = {}\r\n\r\n        validateForm({ isAuth: false, values, errors })\r\n\r\n        return errors\r\n    },\r\n    handleSubmit: (values, { setSubmitting, props }) => {\r\n        store\r\n            .dispatch(userActions.fetchUserRegister(values))\r\n            .then(({ status }) => {\r\n                if (status === \"success\") {\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/\")\r\n                    }, 100)\r\n                }\r\n                setSubmitting(false)\r\n            })\r\n            .catch(() => {\r\n                setSubmitting(true)\r\n            })\r\n    },\r\n    displayName: \"RegisterForm\",\r\n})(RegisterForm)\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { Result, Button } from \"antd\"\r\nimport { InfoCircleTwoTone } from \"@ant-design/icons\"\r\n\r\nimport { userApi } from \"utils/api\"\r\n\r\nimport { Block } from \"components\"\r\n\r\nconst renderTextInfo = (hash, verified, history) => {\r\n    if (hash) {\r\n        if (verified) {\r\n            return {\r\n                status: \"success\",\r\n                title: \"Готово!\",\r\n                message: \"Аккаунт успешно подтверждён\",\r\n            }\r\n        } else {\r\n            return {\r\n                status: \"error\",\r\n                title: \"Ошибка!\",\r\n                message: \"Ошибка при подтверждении аккаунта\",\r\n            }\r\n        }\r\n    } else {\r\n        return {\r\n            icon: <InfoCircleTwoTone style={{ fontSize: \"70px\" }} />,\r\n            title: \"Подтвердите аккаунт!\",\r\n            message:\r\n                \"Ссылка с подтверждением аккаунта отправлена на указанную почту\",\r\n        }\r\n    }\r\n}\r\n\r\nconst CheckEmailInfo = ({ location, history }) => {\r\n    const [verified, setVerified] = useState(false)\r\n    const hash = location.search.split(\"hash=\")[1]\r\n    const info = renderTextInfo(hash, verified)\r\n\r\n    useEffect(() => {\r\n        if (hash) {\r\n            userApi.verifyHash(hash).then(({ data }) => {\r\n                if ((data.status = \"success\")) {\r\n                    setVerified(true)\r\n                }\r\n            })\r\n        }\r\n    })\r\n    return (\r\n        <Block>\r\n            <Result\r\n                status={info.status}\r\n                icon={info.icon}\r\n                title={info.title}\r\n                subTitle={info.message}\r\n                extra={\r\n                    info.status === \"success\" &&\r\n                    verified && (\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={() => history.push(\"/signin\")}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    )\r\n                }\r\n            />\r\n        </Block>\r\n    )\r\n}\r\n\r\nexport default CheckEmailInfo\r\n","import React from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nimport { LoginForm, RegisterForm } from \"modules\"\r\nimport CheckEmailInfo from \"./components/CheckEmailInfo\"\r\n\r\nimport \"./Auth.scss\"\r\n\r\nconst Auth = () => (\r\n    <section className=\"auth\">\r\n        <div className=\"auth__content\">\r\n            <Route exact path={\"/signin\"} component={LoginForm} />\r\n            <Route exact path=\"/signup\" component={RegisterForm} />\r\n            <Route exact path=\"/signup/verify\" component={CheckEmailInfo} />\r\n        </div>\r\n    </section>\r\n)\r\n\r\nexport default Auth\r\n","import React, { useEffect } from \"react\"\r\nimport { withRouter } from \"react-router\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport { dialogsActions } from \"redux/actions\"\r\n\r\nimport { Messages, ChatInput, Status, Sidebar } from \"containers\"\r\n\r\nimport \"./Home.scss\"\r\n\r\nconst Home = (props) => {\r\n    const { setCurrentDialogId, user } = props\r\n    useEffect(() => {\r\n        const {\r\n            location: { pathname },\r\n        } = props\r\n        const dialogId = pathname.split(\"/\").pop()\r\n\r\n        setCurrentDialogId(dialogId)\r\n    }, [props.location.pathname])\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <div className=\"chat\">\r\n                <Sidebar />\r\n                {user && (\r\n                    <div className=\"chat__dialog\">\r\n                        <Status />\r\n                        <Messages />\r\n                        <div className=\"chat__dialog-input\">\r\n                            <ChatInput />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(\r\n    connect(({ user }) => ({ user: user.data }), dialogsActions)(Home)\r\n)\r\n","import React from \"react\"\nimport { Route, Redirect, Switch } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\nimport { Auth, Home } from \"./pages\"\n\nconst App = (props) => {\n    const { isAuth } = props\n    return (\n        <div className=\"wrapper\">\n            <Switch>\n                <Route\n                    exact\n                    path={[\"/signin\", \"/signup\", \"/signup/verify\"]}\n                    component={Auth}\n                />\n                <Route\n                    path=\"/\"\n                    render={() =>\n                        isAuth ? <Home /> : <Redirect to=\"/signin\" />\n                    }\n                />\n            </Switch>\n        </div>\n    )\n}\n\nexport default connect(({ user }) => ({\n    isAuth: user.isAuth,\n}))(App)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\n\nimport { userActions } from \"redux/actions\"\nimport store from \"redux/store\"\n\nimport App from \"./App\"\n\nimport \"./styles/index.scss\"\nimport \"emoji-mart/css/emoji-mart.css\"\n\nstore.dispatch(userActions.fetchUserData())\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}